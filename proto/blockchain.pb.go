// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/blockchain.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddBlockReq struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlockReq) Reset()         { *m = AddBlockReq{} }
func (m *AddBlockReq) String() string { return proto.CompactTextString(m) }
func (*AddBlockReq) ProtoMessage()    {}
func (*AddBlockReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_88a88d68150678ba, []int{0}
}
func (m *AddBlockReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlockReq.Unmarshal(m, b)
}
func (m *AddBlockReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlockReq.Marshal(b, m, deterministic)
}
func (dst *AddBlockReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlockReq.Merge(dst, src)
}
func (m *AddBlockReq) XXX_Size() int {
	return xxx_messageInfo_AddBlockReq.Size(m)
}
func (m *AddBlockReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlockReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlockReq proto.InternalMessageInfo

func (m *AddBlockReq) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type AddBlockRes struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlockRes) Reset()         { *m = AddBlockRes{} }
func (m *AddBlockRes) String() string { return proto.CompactTextString(m) }
func (*AddBlockRes) ProtoMessage()    {}
func (*AddBlockRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_88a88d68150678ba, []int{1}
}
func (m *AddBlockRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlockRes.Unmarshal(m, b)
}
func (m *AddBlockRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlockRes.Marshal(b, m, deterministic)
}
func (dst *AddBlockRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlockRes.Merge(dst, src)
}
func (m *AddBlockRes) XXX_Size() int {
	return xxx_messageInfo_AddBlockRes.Size(m)
}
func (m *AddBlockRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlockRes.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlockRes proto.InternalMessageInfo

func (m *AddBlockRes) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetBlockchainReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockchainReq) Reset()         { *m = GetBlockchainReq{} }
func (m *GetBlockchainReq) String() string { return proto.CompactTextString(m) }
func (*GetBlockchainReq) ProtoMessage()    {}
func (*GetBlockchainReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_88a88d68150678ba, []int{2}
}
func (m *GetBlockchainReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockchainReq.Unmarshal(m, b)
}
func (m *GetBlockchainReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockchainReq.Marshal(b, m, deterministic)
}
func (dst *GetBlockchainReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockchainReq.Merge(dst, src)
}
func (m *GetBlockchainReq) XXX_Size() int {
	return xxx_messageInfo_GetBlockchainReq.Size(m)
}
func (m *GetBlockchainReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockchainReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockchainReq proto.InternalMessageInfo

type Block struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PrevBlockHash        string   `protobuf:"bytes,2,opt,name=prevBlockHash,proto3" json:"prevBlockHash,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_88a88d68150678ba, []int{3}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Block) GetPrevBlockHash() string {
	if m != nil {
		return m.PrevBlockHash
	}
	return ""
}

func (m *Block) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type GetBlockchainRes struct {
	Blocks               []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockchainRes) Reset()         { *m = GetBlockchainRes{} }
func (m *GetBlockchainRes) String() string { return proto.CompactTextString(m) }
func (*GetBlockchainRes) ProtoMessage()    {}
func (*GetBlockchainRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_88a88d68150678ba, []int{4}
}
func (m *GetBlockchainRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockchainRes.Unmarshal(m, b)
}
func (m *GetBlockchainRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockchainRes.Marshal(b, m, deterministic)
}
func (dst *GetBlockchainRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockchainRes.Merge(dst, src)
}
func (m *GetBlockchainRes) XXX_Size() int {
	return xxx_messageInfo_GetBlockchainRes.Size(m)
}
func (m *GetBlockchainRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockchainRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockchainRes proto.InternalMessageInfo

func (m *GetBlockchainRes) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func init() {
	proto.RegisterType((*AddBlockReq)(nil), "proto.AddBlockReq")
	proto.RegisterType((*AddBlockRes)(nil), "proto.AddBlockRes")
	proto.RegisterType((*GetBlockchainReq)(nil), "proto.GetBlockchainReq")
	proto.RegisterType((*Block)(nil), "proto.Block")
	proto.RegisterType((*GetBlockchainRes)(nil), "proto.GetBlockchainRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockchainClient is the client API for Blockchain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockchainClient interface {
	// A simpe RPC to create new BC
	AddBlock(ctx context.Context, in *AddBlockReq, opts ...grpc.CallOption) (*AddBlockRes, error)
	// A simpe RPC to get a BC
	GetBlockchain(ctx context.Context, in *GetBlockchainReq, opts ...grpc.CallOption) (*GetBlockchainRes, error)
}

type blockchainClient struct {
	cc *grpc.ClientConn
}

func NewBlockchainClient(cc *grpc.ClientConn) BlockchainClient {
	return &blockchainClient{cc}
}

func (c *blockchainClient) AddBlock(ctx context.Context, in *AddBlockReq, opts ...grpc.CallOption) (*AddBlockRes, error) {
	out := new(AddBlockRes)
	err := c.cc.Invoke(ctx, "/proto.Blockchain/AddBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainClient) GetBlockchain(ctx context.Context, in *GetBlockchainReq, opts ...grpc.CallOption) (*GetBlockchainRes, error) {
	out := new(GetBlockchainRes)
	err := c.cc.Invoke(ctx, "/proto.Blockchain/GetBlockchain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockchainServer is the server API for Blockchain service.
type BlockchainServer interface {
	// A simpe RPC to create new BC
	AddBlock(context.Context, *AddBlockReq) (*AddBlockRes, error)
	// A simpe RPC to get a BC
	GetBlockchain(context.Context, *GetBlockchainReq) (*GetBlockchainRes, error)
}

func RegisterBlockchainServer(s *grpc.Server, srv BlockchainServer) {
	s.RegisterService(&_Blockchain_serviceDesc, srv)
}

func _Blockchain_AddBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBlockReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).AddBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Blockchain/AddBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).AddBlock(ctx, req.(*AddBlockReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blockchain_GetBlockchain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockchainReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).GetBlockchain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Blockchain/GetBlockchain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).GetBlockchain(ctx, req.(*GetBlockchainReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Blockchain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Blockchain",
	HandlerType: (*BlockchainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddBlock",
			Handler:    _Blockchain_AddBlock_Handler,
		},
		{
			MethodName: "GetBlockchain",
			Handler:    _Blockchain_GetBlockchain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/blockchain.proto",
}

func init() { proto.RegisterFile("proto/blockchain.proto", fileDescriptor_blockchain_88a88d68150678ba) }

var fileDescriptor_blockchain_88a88d68150678ba = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xca, 0xc9, 0x4f, 0xce, 0x4e, 0xce, 0x48, 0xcc, 0xcc, 0xd3, 0x03, 0x0b, 0x08,
	0xb1, 0x82, 0x29, 0x25, 0x45, 0x2e, 0x6e, 0xc7, 0x94, 0x14, 0x27, 0x90, 0x6c, 0x50, 0x6a, 0xa1,
	0x90, 0x10, 0x17, 0x4b, 0x4a, 0x62, 0x49, 0xa2, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98,
	0x8d, 0xaa, 0xa4, 0x18, 0xa4, 0x24, 0x23, 0xb1, 0x38, 0x03, 0xa6, 0x04, 0xc4, 0x56, 0x12, 0xe2,
	0x12, 0x70, 0x4f, 0x2d, 0x71, 0x82, 0xdb, 0x11, 0x94, 0x5a, 0xa8, 0x14, 0xca, 0xc5, 0x0a, 0x16,
	0xc0, 0xa6, 0x41, 0x48, 0x85, 0x8b, 0xb7, 0xa0, 0x28, 0xb5, 0x0c, 0xac, 0xc0, 0x03, 0x24, 0xc9,
	0x04, 0x96, 0x44, 0x15, 0x84, 0xbb, 0x86, 0x19, 0xc9, 0x35, 0x16, 0x18, 0x56, 0x15, 0x0b, 0xa9,
	0x70, 0xb1, 0x81, 0xfd, 0x57, 0x2c, 0xc1, 0xa8, 0xc0, 0xac, 0xc1, 0x6d, 0xc4, 0x03, 0xf1, 0xa3,
	0x1e, 0xc4, 0xcd, 0x50, 0x39, 0xa3, 0x66, 0x46, 0x2e, 0x2e, 0x84, 0x3e, 0x21, 0x23, 0x2e, 0x0e,
	0x98, 0xb7, 0x84, 0x84, 0xa0, 0x1a, 0x90, 0x82, 0x42, 0x0a, 0x53, 0xac, 0x58, 0xc8, 0x91, 0x8b,
	0x17, 0xc5, 0x72, 0x21, 0x71, 0xa8, 0x22, 0x74, 0xdf, 0x4b, 0xe1, 0x90, 0x28, 0x4e, 0x62, 0x03,
	0x8b, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x8c, 0x54, 0x98, 0x98, 0x01, 0x00, 0x00,
}
